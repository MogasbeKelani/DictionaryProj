<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
<meta content="text/html; charset=ISO-8859-1" http-equiv="content-type"><title>Assignment 2</title></head>
<body style="color: rgb(0, 0, 0); background-color: rgb(204, 255, 255);" alink="#000099" link="#000099" vlink="#990099">
<h2 style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-style: normal; font-variant: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">Assignment
2 - Arrays, Sorting and Searching</h2>
<p style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">due October 8th</p>
<span style="font-weight: bold; color: red;"></span>
<p style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">The
purpose of this assignment is to give you practice working with arrays,
passing them to functions, sorting, searching and reading and writing
text files.</p>
<p style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">In
this program you will read two files and store their contents in
arrays. &nbsp;You will sort both arrays, and then search an array
for each element of the second array.</p>
<span style="font-family: monospace;"></span>
<hr style="width: 100%; height: 2px;">
<h3>Program Steps</h3>
<ul>
<li>Open two input files and one output file.<br>
</li>
</ul>
<div style="margin-left: 40px;"><span style="text-decoration: underline;">Input files</span><br>
<ul>
<li><a href="unsorted_dictionary.txt">unsorted_dictionary.txt</a>
- this file contains 16000 words</li>
<li><a href="keywords.txt">keywords.txt</a>
- this file contains 84 words</li>
</ul>
</div>
<ul>
<li>Read in these two files and store their contents in 2
arrays of strings. &nbsp;Do not use a vector.</li>
<li>Sort both arrays using either a <span style="font-style: italic;"><span style="font-weight: bold;">selection sort</span></span><span style="font-weight: bold; font-style: italic;"> or an
insertion sort</span>. &nbsp;<span style="font-weight: bold;">Use the same sort routine for
sorting both arrays</span>. &nbsp;Do not use the STL sort algorithm or quick sort.</li>
<li>Search the <span style="font-style: italic;">dictionary</span>
array for each <span style="font-style: italic;">keyword</span>.
&nbsp;If the keyword is not present in the <span style="font-style: italic;">dictionary</span> array,
write a message to the output file that the <span style="font-style: italic;">keyword</span> is not
found in the <span style="font-style: italic;">dictionary</span>
(see sample output below). &nbsp;Count the number of <span style="font-style: italic;">keywords</span> not found.
&nbsp;You will print this number at the end of the program. &nbsp;Your search must be a binary search.</li>
</ul>
<span style="font-family: monospace;"></span>
<hr style="width: 100%; height: 2px;">
<h3>Output Details</h3>
<span style="font-style: italic; font-weight: bold;"></span>
<h4>Required console output</h4>
<span style="font-family: monospace;"><span style="font-weight: bold;">Number of keywords not found = ??</span>
&nbsp; &lt;= the number is less than</span> 20<br>
<h4>Required file output</h4>
<table style="text-align: left; width: 334px; height: 198px;" border="1" cellpadding="2" cellspacing="2">
<tbody>
<tr>
<td style="background-color: rgb(153, 255, 153);" align="undefined" valign="undefined"><span style="font-family: monospace;">keywords not in the dictionary<br>alignof<br>asm<br>char16_t<br>char32_t<br>compl<br>const_cast<br>constexpr<br></span><span style="font-family: monospace;">...</span></td>
</tr>
</tbody>
</table>
<br>
<hr style="width: 100%; height: 2px;">
<h3>Additional Requirements</h3>
You must include at least two additional functions:<br>
<ul>
<li>a sort function</li>
<li>a search function that looks for each keyword in the
dictionary array. &nbsp;You may use a function that is similar to the one that was presented in class.</li>
</ul><span style="color: rgb(0, 0, 0); font-family: &quot;Times New Roman&quot;; font-size: medium; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 1; word-spacing: 0px; display: inline ! important; float: none; background-color: rgb(173, 216, 230);">Place the function definitions below main() and function prototypes above main().</span><hr style="width: 100%; height: 2px;"><h3>Hints</h3><ul><li>The
string class has less than, greater than, and equal operators (that's
&lt;, &gt;, and ==). &nbsp;You'll find those quite useful for sorting
and searching.</li><li>Try working with small dictionary and small
keyword files while you are developing your code. &nbsp;The logic is
the same for a small file as it would be for large files. &nbsp; It
will be easier to debug your code with smaller files. &nbsp;After you
get it working, switch over to the larger files.</li></ul>&nbsp;
</body></html>